name: Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
jobs:
  py-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v4
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        working-directory: ./scripts/slmatchups
        run: |
          python -m pip install --upgrade pip pytest
          pip install -r requirements.txt --prefer-binary
      - name: test py script
        working-directory: ./scripts/slmatchups
        run: |
          pytest test_main.py
  go-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -v ./...
  publish-github:
    runs-on: ubuntu-latest
    needs: [ py-test, go-test ]
    steps:
      - uses: actions/checkout@v4
      - name: Login to Github Package Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u ${{ github.repository }} --password-stdin
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag magic-8ball:latest --build-arg BOT_TOKEN=${{ secrets.BOT_TOKEN }}
      - name: Tag the Docker image
        run: docker tag magic-8ball:latest docker.pkg.github.com/berryscottr/magic-8ball/magic-8ball:latest
      - name: Push the Docker image
        run: docker push docker.pkg.github.com/berryscottr/magic-8ball/magic-8ball:latest
  publish-gcr:
    runs-on: ubuntu-latest
    needs: [ py-test, go-test ]
    steps:
      - uses: actions/checkout@v4
      - name: Configure Docker CLI
        run: |
          echo "${{ secrets.GCP_SA_KEY_ESCAPED_QUOTES }}" > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          gcloud auth configure-docker
      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/magic-8ball:latest --build-arg BOT_TOKEN=${{ secrets.BOT_TOKEN }}
      - name: Push the Docker image
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/magic-8ball:latest
  deploy-cloud-run:
    runs-on: ubuntu-latest
    needs: [ publish-gcr ]
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: 'latest'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: magic-8ball
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/magic-8ball:latest
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          secrets: |
            BOT_TOKEN=magic-8ball-token:latest
          flags: |
            '--port=8080'

